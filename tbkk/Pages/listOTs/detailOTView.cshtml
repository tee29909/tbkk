@page
@model tbkk.Pages.listOTs.detailOTViewModel

@{
    ViewData["Title"] = "detailOTView";
}





<div id="content-wrapper">
    <div name="55555" class="card-layout">



        <h1>Detail OT</h1>
        <ol class="breadcrumb">
            <li class="breadcrumb-item active">Overtime</li>
            <li class="breadcrumb-item active">List OT</li>
            <li class="breadcrumb-item active">Detail OT</li>
        </ol>

        <div>
            <h4>

                <dd class="col-sm-10">
                    @{
                        DateTime date = Model.DetailOT.OT.TimeStart;
                    }

                    @date.ToString("dddd, dd MMMM yyyy")


                </dd>
            </h4>
            <hr />

            <div class="card " style="margin-top:1%">
                <div class="card-header">
                    Detail
                </div>

                <div class="card-body">

                    <dl class="row ">



                        <dt class="col-sm-6 text-right">
                            @Html.DisplayNameFor(model => model.DetailOT.TimeStart)
                        </dt>
                        <dd class="col-sm-6">
                            @Html.DisplayFor(model => model.DetailOT.TimeStart)
                        </dd>

                        <dt class="col-sm-6 text-right">
                            @Html.DisplayNameFor(model => model.DetailOT.TimeEnd)
                        </dt>
                        <dd class="col-sm-6">
                            @Html.DisplayFor(model => model.DetailOT.TimeEnd)
                        </dd>



                        <dt class="col-sm-6 text-right">
                            @Html.DisplayNameFor(model => model.DetailOT.Hour)
                        </dt>
                        <dd class="col-sm-6">
                            @Html.DisplayFor(model => model.DetailOT.Hour)
                        </dd>

                        <dt class="col-sm-6 text-right">
                            @Html.DisplayNameFor(model => model.DetailOT.Type)
                        </dt>
                        <dd class="col-sm-6">
                            @Html.DisplayFor(model => model.DetailOT.Type)
                        </dd>

                        <dt class="col-sm-6 text-right">
                            @Html.DisplayNameFor(model => model.DetailOT.Status)
                        </dt>
                        <dd class="col-sm-6">
                            @Html.DisplayFor(model => model.DetailOT.Status)
                        </dd>


                        <dt class="col-sm-6 text-right">
                            @Html.DisplayNameFor(model => model.DetailOT.Part)
                        </dt>
                        <dd class="col-sm-6">
                            @Html.DisplayFor(model => model.DetailOT.Part.Name)
                        </dd>


                        <dt class="col-sm-6 text-right">
                            @Html.DisplayNameFor(model => model.DetailOT.FoodSet)
                        </dt>
                        <dd class="col-sm-6">
                            @Html.DisplayFor(model => model.DetailOT.FoodSet.NameSet)
                        </dd>

                        <dt class="col-sm-6 text-right">
                            @Html.DisplayNameFor(model => model.DetailOT.Employee)
                        </dt>
                        <dd class="col-sm-6">
                            @Html.DisplayFor(model => model.DetailOT.Employee.FirstName)
                            @Html.DisplayFor(model => model.DetailOT.Employee.LastName)
                        </dd>



                    </dl>


                </div>
            </div>
        </div>
        <div>
            <a asp-page="./Edit" asp-route-id="@Model.DetailOT.DetailOTID">Edit</a> |
            <a asp-page="./../listOTs/listOT" asp-route-id="@Model.Employee.EmployeeID">Back to List</a>
        </div>




    </div>
    <!-- /.container-fluid -->
   
</div>


@section Scripts {
    <script>
        var nav = document.getElementById("Management");
        var nav2 = document.getElementById("Management OT");
        @{ if (Model.Employee.Position.PositionName.Equals("Manager") || Model.Employee.Position.PositionName.Equals("admin"))
            {
                @:nav.style.display = "block";
            }
            if (Model.Employee.Department.DepartmentName.Equals("Human Resource") || Model.Employee.Position.PositionName.Equals("admin"))
            {
                @:nav2.style.display = "block";
            }
        }
         var name = document.getElementById("nav_name").innerHTML = "Name: @Model.Employee.FirstName @Model.Employee.LastName Position: @Model.Employee.Position.PositionName";
        var img = document.getElementById("myImg").src = "/Upload/@Model.Employee.Image";
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
