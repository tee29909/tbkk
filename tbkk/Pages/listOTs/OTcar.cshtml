@page
@model tbkk.Pages.listOTs.OTcarModel

@{
    ViewData["Title"] = "OTcar";
}

<div id="content-wrapper">
    <div name="55555" class="card-layout">


        <h1>Report OT</h1>

        <ol class="breadcrumb ">
            <li class="breadcrumb-item active d-print-none">Management OT</li>
            <li class="breadcrumb-item active d-print-none">Report OT</li>

        </ol>
        <div class="row">
            <div class="col">
                <h3>OT @Model.search</h3>
            </div>
            <div class="col d-print-none">
                <div class="float-right">
                    <form>

                        <div class="form-group">

                            <b>Month :&nbsp;</b>


                            <input class="form-input" type="month" asp-for="search">&nbsp;
                            <input class="btn btn-primary" type="submit" value="Search">
                            <button class="btn btn-success" onclick="myFunction()">Print</button>
                        </div>


                    </form>


                    @*<button  align="left" onclick="print()" style="margin-left:5px">
                        <span class="glyphicon glyphicon-print"></span> Print
                    </button>*@


                </div>
            </div>





        </div>













        <div class="row state-overview">
            <div class="col-lg-3 col-sm-6">
                <section class="card" style="background-color:azure;">
                    <div class="symbol terques">
                        <i class="fa fa-clipboard-list"></i>
                    </div>
                    <div class="value">
                        <h2 class="count">@Model.detailList.OT</h2>
                        <p style="color:black">Times</p>
                    </div>
                </section>
            </div>
            <div class="col-lg-3 col-sm-6">
                <section class="card" style="background-color:#FFBAAB;">
                    <div class="symbol red">
                        <i class="fa fa-shuttle-van"></i>
                    </div>
                    <div class="value">
                        <h2 class=" count2">@Model.detailList.car</h2>
                        <p style="color:black">Cars</p>
                    </div>
                </section>
            </div>
            <div class="col-lg-3 col-sm-6">
                <section class="card" style="background-color:#FFF4AB;">
                    <div class="symbol yellow">
                        <i class="fa fa-utensils"></i>
                    </div>
                    <div class="value">
                        <h2 class="count3">@Model.detailList.food</h2>
                        <p style="color:black">Order Food</p>
                    </div>
                </section>
            </div>
            <div class="col-lg-3 col-sm-6">
                <section class="card" style="background-color:#ABF7FF;">
                    <div class="symbol blue">
                        <i class="fa fa-dollar-sign"></i>
                    </div>
                    <div class="value">
                        <h2 class=" count4">@Model.detailList.total.ToString("c2")</h2>
                        <p style="color:black">Total Cost</p>
                    </div>
                </section>
            </div>
        </div>



        <br />



        <div class="row">
            <div class="col-md-6 charts-grids widget">
                <div style=" height: 300px;" id="chart1"></div>
            </div>


            <div class="col-md-6 charts-grids widget states-mdl">
                <div style=" height: 300px;" id="chart2"></div>
            </div>

        </div>


        <br />
        <div class="row">
            <div class="col-md-6 charts-grids widget">
                <div style=" height: 300px;" id="chart3"></div>
            </div>
            <div class="col-md-6 charts-grids widget">
                <div style=" height: 300px;" id="chart4"></div>
            </div>
        </div>







        <br />



        <!-- Area Chart Example-->
        <div class="card mb-3">
            <div class="card-header">
                <i class="fas fa-chart-area"></i>
                Area Chart Example
            </div>
            <div class="card-body">
                <div style=" height: 300px;" id="chart5"></div>

            </div>

        </div>



























    </div>
        <!-- /.container-fluid -->

    </div>

<script>
    function myFunction() {
        window.print();
    }
</script>




@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}

    <script>


       




    @*var myPieChart = new Chart(document.getElementById("myPieChart"), {
  type: 'pie',
  data: {
    labels: @Html.Raw(Json.Serialize(labels)),
    datasets: [{
      data:  @Html.Raw(Json.Serialize(data)),
      backgroundColor:  @Html.Raw(Json.Serialize(backgroundColor)),
    }],
  },
});






        var myPieChart2 = new Chart(document.getElementById("myPieChart2"), {
  type: 'pie',
  data: {
    labels: @Html.Raw(Json.Serialize(labels)),
    datasets: [{
      data:  @Html.Raw(Json.Serialize(data)),
      backgroundColor:  @Html.Raw(Json.Serialize(backgroundColor)),
    }],
  },
});

        var myPieChart3 = new Chart(document.getElementById("myPieChart3"), {
  type: 'pie',
  data: {
    labels: @Html.Raw(Json.Serialize(labels)),
    datasets: [{
      data:  @Html.Raw(Json.Serialize(data)),
      backgroundColor:  @Html.Raw(Json.Serialize(backgroundColor)),
    }],
  },
});
        var myPieChart4 = new Chart(document.getElementById("myPieChart4"), {
  type: 'pie',
  data: {
    labels: @Html.Raw(Json.Serialize(labels)),
    datasets: [{
      data:  @Html.Raw(Json.Serialize(data)),
      backgroundColor:  @Html.Raw(Json.Serialize(backgroundColor)),
    }],
  },
});*@














    var chart1 = new CanvasJS.Chart("chart1", {
	animationEnabled: true,
	theme: "light2", // "light1", "light2", "dark1", "dark2"
	title:{
        text: "OT Hour Work"
	},
	axisY: {
		//title: "Reserves(MMbbl)"
	},
	data: [{
		type: "column",
		showInLegend: true,
		legendMarkerColor: "grey",
		//legendText: "MMbbl = one million barrels",
		dataPoints: @Html.Raw(Json.Serialize(Model.chart1)),
	}]
});


         chart1.render();





     var chart2 = new CanvasJS.Chart("chart2", {
	animationEnabled: true,
	title: {
        text: "Shuttle Point"
	},
	data: [{
		type: "pie",
		startAngle: 240,
		yValueFormatString: "##0.00'%'",
		indexLabel: "{label} {y}",
		dataPoints: [
			{y: 79.45, label: "Google"},
			{y: 7.31, label: "Bing"},
			{y: 7.06, label: "Baidu"},
			{y: 4.91, label: "Yahoo"},
			{y: 1.26, label: "Others"}
		]
	}]
});



        chart2.render();








	var chart3 = new CanvasJS.Chart("chart3", {
	animationEnabled: true,

	title:{
        text:"Shuttle routes"
	},
	axisX:{
		interval: 1
	},
	axisY2:{
		interlacedColor: "rgba(1,77,101,.2)",
		gridColor: "rgba(1,77,101,.1)",
		title: "Number of Companies"
	},
	data: [{
		type: "bar",
		name: "companies",
		axisYType: "secondary",
		color: "#014D65",
		dataPoints: @Html.Raw(Json.Serialize(Model.chart3)),
	}]
});
chart3.render();




















	var chart4 = new CanvasJS.Chart("chart4", {
	animationEnabled: true,
	title:{
		text: "Cost OT(@Model.Total.ToString("c"))"
		
	},
	data: [{
		type: "doughnut",
		startAngle: 60,
		//innerRadius: 60,
		indexLabelFontSize: 17,
		indexLabel: "{label} - #percent%",
		toolTipContent: "<b>{label}:</b> {y} (#percent%)",
		dataPoints: @Html.Raw(Json.Serialize(Model.chart4)),
	}]
});
chart4.render();





var chart5 = new CanvasJS.Chart("chart5", {
	theme:"light2",
	animationEnabled: true,
	title:{
		text: "Total Cost In Year (@Model.chart5.Total.Sum(e => e.y).ToString("c2"))"
	},
	axisY :{
		includeZero: false,
		//title: "Number of Viewers",
		//suffix: "mn"
	},
	toolTip: {
		shared: "true"
	},
	legend:{
		cursor:"pointer",
		itemclick : toggleDataSeries
	},
	data: [{
		type: "spline",
		showInLegend: true,
		yValueFormatString: "#,##,###",
		name: "Total Cost",
		dataPoints: @Html.Raw(Json.Serialize(Model.chart5.Total))
	},
	{
		type: "spline",
		showInLegend: true,
		yValueFormatString: "#,##,###",
		name: "Cost Car",
		dataPoints:  @Html.Raw(Json.Serialize(Model.chart5.CostCar))
	},
	{
		type: "spline",
		showInLegend: true,
		yValueFormatString: "#,##,###",
		name: "Cost Food",
		dataPoints:@Html.Raw(Json.Serialize(Model.chart5.CostFood))
	}]
        });



chart5.render();


        function toggleDataSeries(e) {
	if (typeof(e.dataSeries.visible) === "undefined" || e.dataSeries.visible ){
		e.dataSeries.visible = false;
	} else {
		e.dataSeries.visible = true;
	}

        }


    </script>

    <script>
        var nav = document.getElementById("Management");
        var nav2 = document.getElementById("Management OT");
        @{ if (Model.Employee.Position.PositionName.Equals("Manager") || Model.Employee.Position.PositionName.Equals("admin"))
            {
                @:nav.style.display = "block";
            }
            if (Model.Employee.Department.DepartmentName.Equals("Human Resource") || Model.Employee.Position.PositionName.Equals("admin"))
            {
                @:nav2.style.display = "block";
            }
        }

        var name = document.getElementById("nav_name").innerHTML = "Name: @Model.Employee.FirstName @Model.Employee.LastName Position: @Model.Employee.Position.PositionName";
        var img = document.getElementById("myImg").src = "/Upload/@Model.Employee.Image";
    </script>





}
